name: Angular components CD

on:
#  push:
#    branches:
#      - feat/gbi-component
#      - feat/GBIW-142_continuous_deployment
  pull_request:
    branches:
      - feat/gbi-component

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
#      - uses: actions/checkout@v2
#      - uses: actions/setup-node@v1
#        with:
#          node-version: 14
#      - uses: actions/cache@v1
#        with:
#          path: ~/.npm
#          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
#          restore-keys: |
#            ${{ runner.os }}-node-
      - name: Build
        run: |
          #cd tailormap-components
          #npm install
          #npm run build
           mkdir -p tailormap-components/dist/bridge
           echo test > tailormap-components/dist/bridge/example.js
      - name: Upload dist
        uses: actions/upload-artifact@v2
        with:
          name: tailormap-components-dist
          path: |
            tailormap-components/dist/bridge/*.js
            tailormap-components/dist/bridge/*.css
            tailormap-components/dist/bridge/*.map
          
  deploy-pr:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download build
        uses: actions/download-artifact@v2
        with:
          name: tailormap-components-dist
      # For rsync to create the directory it is easiest if it exists locally.
      # Without the command line option to rsync to delete files other PR deployments' files will remain.
      - name: Create directory structure
        run: |
          DIR=pr/${{ github.event.pull_request.number }}
          mkdir -p $DIR
          mv * $DIR 2>/dev/null || true
      - name: Deploy to staging server
        uses: easingthemes/ssh-deploy@4f928a3efcb95f593a10caf74003bcd3674a769b
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_PRIVATE_KEY }}
          ARGS: "-rltgoDzvO"
          SOURCE: "."
          REMOTE_HOST: ${{ secrets.SERVER_HOST }}
          REMOTE_USER: ${{ secrets.SERVER_USER }}
          TARGET: ${{ secrets.SERVER_TARGET }}
      - name: Deploy pull request
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          echo event: ${{ github.event_name }}
          echo Deploy PR nr ${{ github.event.pull_request.number }}
          ls -lR
          
#  deploy-branch:
#    runs-on: ubuntu-latest
#    needs: build
#    steps:
#      - name: Deploy branch
#        env:
#        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/feat/GBIW-142_continuous_deployment' }}
#        run: |
#          echo Deploy branch


