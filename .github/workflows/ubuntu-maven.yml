name: Ubuntu Maven build

on: [push, pull_request]

jobs:
  build:
    name: Ubuntu Java ${{ matrix.java }}
    runs-on: [ubuntu-latest]
    strategy:
      matrix:
        java: [1.8]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: setup database
        run: |
          sudo systemctl start postgresql.service
          psql --version
          sudo -u postgres psql -d postgres -c 'SELECT Version();' || true
          sudo -u postgres psql -a -c "CREATE ROLE flamingo4 LOGIN PASSWORD 'flamingo4' SUPERUSER CREATEDB;"
          sudo -u postgres psql -a -c 'CREATE DATABASE flamingo4;'
          sudo -u postgres psql -a -c 'ALTER DATABASE flamingo4 OWNER TO flamingo4;'
      - name: Priming build with Maven
        run: mvn install -DskipTests -Dtest.skip.integrationtests=true -B -V -fae
      - name: Test with Maven
        run: |
          mvn -e clean test -B
          mvn -e verify -B -Pgh-action -pl '!viewer-admin'
          mvn -e verify -B -Pgh-action -pl 'viewer-admin'
      - name: build javadoc
        if: ${{ matrix.java == '1.8' }}
        run: |
          mvn javadoc:javadoc
          mvn javadoc:test-javadoc
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
